#modal-expediente.modal.fade{ "aria-labelledby" => "nuevoLabel", :role => "dialog", :tabindex => "-1" }
  .modal-dialog.modal-xs{ :role => "document" }
    .modal-content
      .modal-header
        %button.close{ "aria-label" => "Close", "data-dismiss" => "modal", :type => "button" }
          %span{ "aria-hidden" => "true" } &times;
        %h4#nuevoLabel.modal-title= t(".#{actionvar}_expediente") + " #{@expediente.id}"
      = form_for @expediente, url: { action: actionvar } do |f|
        = hidden_field_tag :tramites_pendientes
        = hidden_field_tag :acumula_exp
        = hidden_field_tag :adjunta_exp
        = hidden_field_tag :estados_expedientes
        = hidden_field_tag :tags_ids
        .modal-body
          - if actionvar == "update"
            %ul.nav.nav-tabs{ role: 'tablist' }
              %li.active{ role: 'presentation' }
                %a{ 'aria-controls' => 'exp-panel', 'data-toggle' => 'tab', href: '#exp-panel', role: 'tab' } Expediente

              - @circuitos.each do |c|
                %li{ role: 'presentation' }
                  %a{ 'aria-controls' => 'exp-panel', 'data-toggle' => 'tab', href: '#new-circ-panel', role: 'tab' }
                    = "Circuito Nro #{c.nro}"

              %li{ role: 'presentation' }
                %a{ 'aria-controls' => 'exp-panel', 'data-toggle' => 'tab', href: '#new-circ-panel', role: 'tab' } Nuevo Circuito

          .tab-content
            .tab-pane.active#exp-panel{ role: 'tabpanel' }
              .row
                .col-md-6
                  .input-group#group-tramites
                    = label_tag nil, 'Trámites', { class: 'input-group-addon', id: 'basic-addon8' }
                    = text_field_tag nil, nil, { multiple: :multiple, style: 'width: 100%', id: 'tramites', data: { load: prepopulate_tramites(@expediente) } }
                  .input-group
                    = f.label :nro_fojas, { class: "input-group-addon", id: "basic-addon1" }
                    = f.text_field :nro_fojas, { class: "form-control", "aria-describedby": "basic-addon1", placeholder: t('.fojas'), type: :number }
                  .input-group
                    = f.label 'expedientes_administrativos', { class: "input-group-addon", id: "basic-addon1" }
                    = f.text_field :nro_fojas, { class: "form-control", "aria-describedby": "basic-addon1", placeholder: t('.fojas'), type: :number }
                  .input-group
                    = f.label "Fecha", { class: "input-group-addon", id: "basic-addon2" }
                    = f.text_field :anio, { class: "form-control", "aria-describedby": "basic-addon2", type: :date }
                  .input-group
                    = f.label 'Sumario', { class: "input-group-addon", id: "basic-addon3" }
                    = f.text_area :tema, { class: "form-control", "aria-describedby": "basic-addon3", placeholder: 'Ingrese sumario...', type: :text }
                  .input-group
                    = f.label "Observación", { class: "input-group-addon", id: "basic-addon4" }
                    = f.text_area :observacion, { class: "form-control", "aria-describedby": "basic-addon4", placeholder: 'Observaciones', type: :text }
                  .input-group
                    = label_tag nil, 'Acumulado en', { class: 'input-group-addon', id: 'basic-addon8' }
                    = text_field_tag nil, nil, { style: 'width: 100%', id: 'acumula', data: { load: prepopulate_acumula_exp(@expediente) } }
                  .input-group
                    = label_tag nil, 'Acumula a', { class: 'input-group-addon', id: 'basic-addon8' }
                    = text_field_tag nil, nil, { style: 'width: 100%', id: 'acumula', data: { load: prepopulate_acumula_exp(@expediente) }, readonly: true }
                  .input-group
                    = label_tag nil, 'Adjuntada Fisicamente a', { class: 'input-group-addon', id: 'basic-addon8' }
                    = text_field_tag nil, nil, { style: 'width: 100%', id: 'adjunta', data: { load: prepopulate_adjunta_exp(@expediente) }}
                  .input-group
                    = f.label t('.tags'), { class: "input-group-addon", id: "basic-addon9" }
                    %input#tags-tokeninput.form-control{"aria-describedby" => "basic-addon9", type: :text, data: { load: prepopulate_tags(@expediente) } }
                .col-md-6
                  .input-group
                    = f.label "Estados", t('.estados'), { class: "input-group-addon", id: "basic-addon9" }
                    = text_field_tag nil, nil, { class: "form-control field-state", "aria-describedby": "basic-addon9",
                       placeholder: 'Sesion nro...' }
                    = text_field_tag nil, nil ,{ class: "form-control field-state", "aria-describedby": "basic-addon9", id: 'fecha', :placeholder => "Ingrese Fecha", type: :date }
                    = select_tag nil, options_for_select(get_estados), { class: "form-control field-state", style: 'width: 100%', id: 'estados' }
                    = select_tag nil, nil, { class: "form-control field-state", style: 'width: 100%', id: 'esp1' }
                    = select_tag nil, nil, { class: "form-control field-state", style: 'width: 100%', id: 'esp2' }
                    .input-group-addon.parent-group-btn.btn#add_state
                      %i.fa.fa-plus-circle.fa-2x
                  #states-table-column
                    .row
                      .col-xs-12.without-padding
                        %table.table.table-striped.table-bordered#states-table
                          %thead
                            %tr
                              %th= t('.table.state')
                              %th= t('.table.specification')
                              %th{ width: "17%" }= t('.table.date')
                              %th{ width: "1%" }= icon 'trash', '', class: 'fa-1x'
                          %tbody
                            - if @expediente.present? && @expediente.circuitos.find_by(nro: 0).present?
                              - @expediente.circuitos.find_by(nro: 0).estado_expedientes.order(fecha: :asc).each do |est|
                                %tr
                                  %td= est.nombre
                                  %td= "#{est.especificacion1} -->  #{est.especificacion2}"
                                  %td= est.fecha
                                  %td
            .tab-pane#new-circ-panel{ role: 'tabpanel' }
              = render partial: 'circuit'

        .modal-footer
          = f.submit t(".submit.#{ actionvar }"), { class: "btn btn-primary modal-submit" }

:javascript
  wi = $(window).width() - 20;
  margin = 10;
  $("#modal-expediente .modal-xs").css('width', wi);
  $("#modal-expediente .modal-xs").css('margin-left', margin);

  $('#modal-expediente .modal-submit').on('click', function(event) {
    event.preventDefault();

    var tramites = {};
    var index = 0;
    $("#modal-expediente .tramite-token").each(function(key, value) {
      tramites[index] = {
        id: $(value).data("id"),
        type: $(value).data("type")
      };
      index++;
    });

    //add states expedient to form
    var states = {};
    var index = 0;
    $("#modal-expediente .states-tr").each(function(key, value) {
      states[index] = {
        id: $(value).data("id"),
        fecha: $(value).data("fecha"),
        especificacion1: $(value).data("esp1"),
        especificacion2: $(value).data("esp2"),
        tipo: $(value).data("estado")
      };
      index++;
    });

    var tagsIds = [];
    $("#modal-expediente .tags-token").each(function(key, value) {
      tagsIds.push($(this).data("id"));
    })

    var adjunta = $("#modal-expediente .adjunta-token").data('adjunta');
    var acumula = $("#modal-expediente .acumula-token").data('acumula');

    $("#modal-expediente #acumula_exp").val(acumula);
    $("#modal-expediente #adjunta_exp").val(adjunta);
    $("#modal-expediente #tags_ids").val(tagsIds);
    $("#modal-expediente #tramites_pendientes").val(JSON.stringify(tramites));
    $("#modal-expediente #estados_expedientes").val(JSON.stringify(states));
    $("#modal-expediente #new_expediente, [id^='edit_expediente']").submit();
  });

  $('.modal').on('shown.bs.modal', function() {
    $('form:first *:input[type!=hidden]:first').focus();
  });

  $('.modal').on('hidden.bs.modal', function () {
    $(document).keydown(function(event) {
      var currentRow, rowpos, table;
      table = $('table.datatable-keyevents').dataTable();
      currentRow = $('table.datatable-keyevents tbody tr.info').get(0);
      switch (event.keyCode) {
        case 40:
          if ($(currentRow).next().length !== 0) {
            $(currentRow).next().addClass('info');
            $(currentRow).removeClass('info');
          }
          break;
        case 38:
          if ($(currentRow).prev().length !== 0) {
            $(currentRow).prev().addClass('info');
            $(currentRow).removeClass('info');
          }
          break;
        case 37:
          table.fnPageChange('previous');
          break;
        case 39:
          table.fnPageChange('next');
          break;
        case 13:
          $('table.datatable-keyevents tr.info').find('td:eq(0) a').get(0).click();
      }
      rowpos = $('table.datatable-keyevents tr.info').position();
      $(document).scrollTop(rowpos.top - 45);
    });

    $.ctrl('C', function() {
      $('#btn-new').click();
      $('table.datatable-keyevents tbody').find('.info').find('.linktocreate').click();
    });

    $.ctrl('E', function() {
      $('table.datatable-keyevents tbody').find('.info').find('.linktoedit').click();
    });

    $('div.dataTables_filter input').focus();
  });

  function format_tramites(tramite) {
    return "<div class='tramite-token' data-type='" + tramite.type + "' data-id='" + tramite.id + "'>" + tramite.type + " Nro: " + tramite.id + "</div>";
  }

  function format_tramites_result(tramite) {
    return "<div>" + "<b><i><small>" + "[" + tramite.type + "]" + "</small></i></b>" + " Nro: " + tramite.id + "</div>";
  }

  $("#modal-expediente #tramites").select2({
    placeholder: "Buscar trámites pendientes",
    allowClear: true,
    theme: 'bootstrap',
    formatSelection: format_tramites,
    formatResult: format_tramites_result,
    multiple: true,
    ajax: {
      url: "/expedientes/get_tramites_pendientes",
      dataType: 'json',
      delay: 250,
      data: function (params) {
        return {
          q: params
        };
      },
      results: function (data, page) {
        // parse the results into the format expected by Select2.
        // since we are using custom formatting functions we do not need to
        // alter the remote JSON data
        return {
          results: data
        };
      },
      cache: true
    }
  });

  $("#modal-expediente #acumula").select2({
    placeholder: "Buscar expedientes...",
    allowClear: true,
    theme: 'bootstrap',
    formatSelection: function(exp) {
      return "<div class='acumula-token' data-acumula=" + exp.id + "> Expediente Nro: " + exp.nro_exp + "</div>";
    },
    formatResult: function(exp) {
      return "<div><b><i><small> Expediente Nro: " + exp.nro_exp + "</small></i></b></div>";
    },
    ajax: {
      url: "/expedientes/search",
      dataType: 'json',
      delay: 250,
      data: function (params) {
        return {
          q: params
        };
      },
      results: function (data, page) {
        // parse the results into the format expected by Select2.
        // since we are using custom formatting functions we do not need to
        // alter the remote JSON data
        return {
          results: data
        };
      },
      cache: true
    }
  });

  $("#modal-expediente #adjunta").select2({
    placeholder: "Buscar expedientes...",
    allowClear: true,
    theme: 'bootstrap',
    formatSelection: function(exp) {
      return "<div class='adjunta-token' data-adjunta=" + exp.id + "> Expediente Nro: " + exp.nro_exp + "</div>";
    },
    formatResult: function(exp) {
      return "<div><b><i><small> Expediente Nro: " + exp.nro_exp + "</small></i></b></div>";
    },
    ajax: {
      url: "/expedientes/search",
      dataType: 'json',
      delay: 250,
      data: function (params) {
        return {
          q: params
        };
      },
      results: function (data, page) {
        // parse the results into the format expected by Select2.
        // since we are using custom formatting functions we do not need to
        // alter the remote JSON data
        return {
          results: data
        };
      },
      cache: true
    }
  });

  $('#modal-expediente #estados').on('change', function() {
    switch(this.value) {
      case "3":
        // A comision
        var comisions = [["Plan. y Coord. Labor", 6], ["GOBIERNO,PET.GEN., ETC", 18], ["COM. REFORMA POLITICA", 36], ["Economía y Presupuesto", 37], ["Desarrollo Humano - Salud y Promoción Social", 38], ["Desarrollo Humano - Educación, Cultura y Deporte", 39], ["Desarrollo Urbano y Obras Públicas", 40], ["Desarrollo Urbano y Servicios Públicos", 41], ["Desarrollo Económico, Producción y Empleo", 42], ["Planificación y Coordinación de Gestión", 43], ["DERECHOS HUMANOS", 45], ["COMISION ESPECIAL DE REFORMA DEL REGLAMENTO INTERNO", 49], ["COMISION INVESTIGADORA RESOLUCION Nº 851/11", 50]];
        var seloption = "";

        $.each(comisions,function(i){
            seloption += '<option value="'+comisions[i][1]+'">'+comisions[i][0]+'</option>';
        });

        $('#modal-expediente #esp1').empty();
        $('#modal-expediente #esp2').empty();
        $('#modal-expediente #esp1').append(seloption);
        break;
      case "2":
        // Orden del Dia
        var options = [["Asunto Entrado",1],["Asunto a Tratar",2]];
        var seloption = "";

        $.each(options,function(i){
            seloption += '<option value="'+options[i][1]+'">'+options[i][0]+'</option>';
        });

        $('#modal-expediente #esp1').empty();
        $('#modal-expediente #esp2').empty();
        $('#modal-expediente #esp1').append(seloption);
        break;
      case "5":
        // Sancionado
        var options1 = [["Aprob. Art. 151 R.I.",1],["Aprob. S/T c/desp.",2],["Aprob. S/T s/desp.",3],["Aprobado",4],["Arch. S/T c/desp.",5],["Arch. S/T s/desp.",6],["Archivado",7],["Decision Acuerdo",8], ["Decisión Art. 71",9],["Rech. S/T c/desp.",10],["Rech. S/T s/desp.",11],["Rechazado",12],["Retirado",13]];
        var options2 = [["Aprob. Simple",14],["1° Lectura",15],["2° Lectura",16]];
        var seloption1 = "";
        var seloption2 = "";

        $.each(options1,function(i){
            seloption1 += '<option value="'+options1[i][1]+'">'+options1[i][0]+'</option>';
        });

        $.each(options2,function(i){
            seloption2 += '<option value="'+options2[i][1]+'">'+options2[i][0]+'</option>';
        });

        $('#modal-expediente #esp1').empty();
        $('#modal-expediente #esp1').append(seloption1);
        $('#modal-expediente #esp2').empty();
        $('#modal-expediente #esp2').append(seloption2);
        break;
      default:
        $('#modal-expediente #esp1').empty();
        $('#modal-expediente #esp2').empty();
        break;
    }
  });

  //Preload select2 input tramites
  var tokenTramites = $('#modal-expediente #tramites').data('load');
  var tramites = []
  $.each(tokenTramites, function(index, tram) {
    tramites.push({id: tram.id, type: tram.type});
  });
  $('#modal-expediente #tramites').select2('data', tramites);

  // Preload select2 input acumula
  var tokenAcumula = $('#modal-expediente #acumula').data('load');
  $('#modal-expediente #acumula').select2('data', tokenAcumula);

  // Preload select2 input adjunta
  var tokenAdjunta = $('#modal-expediente #adjunta').data('load');
  $('#modal-expediente #adjunta').select2('data', tokenAdjunta);

  // Tags
  $('#modal-expediente #tags-tokeninput').tokenInput('/expedientes/search_tag', {
    preventDuplicates: true,
    propertyToSearch: 'nombre',
    theme: 'bootstrap',
    zindex: 1050,
    hintText: "#{ I18n.t('tokeninput.placeholder.tag_example') }",
    tokenFormatter: function(tag) {
      return "<li><p class='tags-token' data-id='" + tag.id + "' style='color: black'> " + tag.nombre + "</p></li>";
    },
    resultsFormatter: function(tag) {
      return '<li><p>' + tag.nombre + '</p></li>';
    },
    allowTabOut: true,
    placeholder: "#{ I18n.t('tokeninput.placeholder.tag') }"
  });

  var tokenTag = $('#modal-expediente #tags-tokeninput').data('load');
  $.each(tokenTag, function(index, tag) {
    $('#modal-expediente #tags-tokeninput').tokenInput('add', tag)
  });

