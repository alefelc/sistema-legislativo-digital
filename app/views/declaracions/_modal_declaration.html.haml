#modaldecl.modal.fade{"aria-labelledby" => "nuevoLabel", :role => "dialog", :tabindex => "-1"}
  .modal-dialog.modal-xs{:role => "document"}
    .modal-content
      .modal-header
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} &times;
        %h4#nuevoLabel.modal-title= t('.new_declaracion')
      = form_for @declaracion, url: { action: actionvar } do |f|
        = hidden_field_tag :tags_ids
        = hidden_field_tag :exps_ids
        = hidden_field_tag :linked_normas
        .modal-body
          .row
            .col-md-4#first-column
              .input-group
                = f.label t('.index'), { class: "input-group-addon", id: "basic-addon1"}
                = f.text_field :letra, { class: "form-control", "aria-describedby": "basic-addon1", :placeholder => t('.letter'), type: :text }
                = f.text_field :nro, { class: "form-control", "aria-describedby": "basic-addon1", :placeholder => t('.number'), type: :number }
                = f.text_field :bis, { class: "form-control", "aria-describedby": "basic-addon1", :placeholder => t('.bis'), type: :number }
              .input-group
                = f.label t('.description'), { class: "input-group-addon", id: "basic-addon3"}
                = f.text_area :descripcion, {class: "form-control", "aria-describedby" => "basic-addon3", :placeholder => t('.description'), type: :text}
              .input-group
                = f.label :sumario, { class: "input-group-addon", id: "basic-addon2"}
                = f.text_area :sumario, {class: "form-control", "aria-describedby" => "basic-addon2", :placeholder => t('.summary'), type: :text}
              .input-group
                = f.label :sancion, { class: "input-group-addon", id: "basic-addon4"}
                = f.text_field :sancion, {class: "form-control", "aria-describedby" => "basic-addon4", type: :date}
              .input-group
                = f.label t('.validate_entry'), { class: "input-group-addon", id: "basic-addon5"}
                = f.text_field :entrada_vigencia, {class: "form-control", "aria-describedby" => "basic-addon5", type: :date }
              .input-group
                = f.label t('.validate_output'), { class: "input-group-addon",id: "basic-addon6"}
                = f.text_field :finaliza_vigencia, {class: "form-control", "aria-describedby" => "basic-addon6", type: :date }
                = f.text_field :plazo_dia, {class: "form-control", "aria-describedby" => "basic-addon6",:placeholder => t('.deadline_day'), type: :number }
                = f.text_field :plazo_mes, {class: "form-control", "aria-describedby" => "basic-addon6",:placeholder => t('.deadline_month'), type: :number }
                = f.text_field :plazo_anio, {class: "form-control", "aria-describedby" => "basic-addon6",:placeholder => t('.deadline_year'), type: :number }
              .input-group
                = f.label t('.organism'), { class: "input-group-addon", id: "basic-addon10"}
                = f.text_field :organismo_origen, {class: "form-control", "aria-describedby" => "basic-addon10", :placeholder => t('.organism'), type: :text }
              .input-group
                = f.label t('.tags'), { class: "input-group-addon", id: "basic-addon13" }
                %input#tags-tokeninput.form-control{"aria-describedby" => "basic-addon13", type: :text, data: { load: prepopulate_tags(@declaracion) } }
            .col-md-8
              .group-buttons
                %button#classify.btn.btn-default{:type => "button"}
                  %i.fa.fa-check-square-o
                  = t('.btn_clasification.classify')
                %button#dates.btn.btn-default{:type => "button"}
                  %i.fa.fa-calendar-plus-o
                  = t('.btn_clasification.dates')
              .dates
                .input-group
                  = label_tag nil, "Carga de fechas", { class: "input-group-addon", id: "basic-addon18"}
                  = select_tag :select_destiny, options_for_select(select_destiny), { class: "form-control", "aria-describedby": "basic-addon18"}
                  .input-group
                    = f.label t('.destiny'), { class: "input-group-addon", id: "basic-addon19"}
                    %input#destiny.form-control{"aria-describedby" => "basic-addon19", type: :text }
                  .input-group
                    = label_tag nil, "Fecha", { class: "input-group-addon", id: "basic-addon20"}
                    %input#destiny_date.form-control{"aria-describedby" => "basic-addon20", type: :date }
                  .input-group-addon.parent-group-btn.btn
                    %i.fa.fa-plus-circle.fa-2x#add_destiny
                #destinies_table
                  .row
                    .col-xs-12
                      %table.table.table-striped.table-bordered
                        %thead
                          %tr
                            %th= "Tipo"
                            %th= "Destino"
                            %th= "Fecha"
                            %th{width: "1%"}= icon 'trash', '', class: 'fa-1x'
                        %tbody
                .group-buttons2
                  %button#ready.btn.btn-success{:type => "button"}= t('.btn_clasification.ready')
              .clasification
                .input-group
                  = f.label "Contenido", { class: "input-group-addon", id: "basic-addon14"}
                  .input-group.form-control
                    = check_box_tag 'clasificaciones[General]', nil ,search_value_classify('General',@declaracion.id)
                    = label_tag 'General', 'General'
                    &nbsp
                    = check_box_tag 'clasificaciones[Autónomo]', nil ,search_value_classify('Autónomo',@declaracion.id)
                    = label_tag 'Autónomo', 'Autónomo'
                  .input-group
                    = f.label "Particular", {class: "input-group-addon", id: "basic-addon15"}
                    .input-group.form-control
                      = check_box_tag 'clasificaciones[Individual y meros actos administrativos]', nil ,search_value_classify('Individual y meros actos administrativos',@declaracion.id)
                      = label_tag 'Individual y meros actos administrativos', 'Individual y meros actos administrativos'
                    .input-group
                      = f.label "Contrataciones y convenios", {class: "input-group-addon", id: "basic-addon16"}
                      .input-group.form-control
                        = check_box_tag 'clasificaciones[De Servicios Públicos]', nil ,search_value_classify('De Servicios Públicos',@declaracion.id)
                        = label_tag 'De Servicios Públicos', 'De Servicios Públicos'
                        &nbsp
                        = check_box_tag 'clasificaciones[Otras]', nil ,search_value_classify('Otras',@declaracion.id)
                        = label_tag 'Otras', 'Otras'
                  .input-group
                    = f.label "Alcance", {class: "input-group-addon", id: "basic-addon16"}
                    .input-group.form-control
                      = check_box_tag 'clasificaciones[Alcance general]', nil ,search_value_classify('Alcance general',@declaracion.id)
                      = label_tag 'Alcance general', 'Alcance general'
                      &nbsp
                      = check_box_tag 'clasificaciones[Alcance especial]', nil ,search_value_classify('Alcance especial',@declaracion.id)
                      = label_tag 'Alcance especial', 'Alcance especial'
                .input-group
                  = f.label "Vigencia", { class: "input-group-addon", id: "basic-addon14"}
                  .input-group.form-control
                    = check_box_tag 'clasificaciones[Dictada por razones de emergencia]', nil ,search_value_classify('Dictada por razones de emergencia',@declaracion.id)
                    = label_tag 'Dictada por razones de emergencia', 'Dictada por razones de emergencia'
                    &nbsp
                    = check_box_tag 'clasificaciones[De necesidad o urgencia]', nil ,search_value_classify('De necesidad o urgencia',@declaracion.id)
                    = label_tag 'De necesidad o urgencia', 'De necesidad o urgencia'
                    &nbsp
                    = check_box_tag 'clasificaciones[Dictado ad referendum]', nil ,search_value_classify('Dictado ad referendum',@declaracion.id)
                    = label_tag 'Dictado ad referendum', 'Dictado ad referendum'
                  .input-group
                    = f.label "De renovación períodica", {class: "input-group-addon", id: "basic-addon15"}
                    .input-group.form-control
                      = check_box_tag 'clasificaciones[Que contienen normas generales y permanentes]', nil ,search_value_classify('Que contienen normas generales y permanentes',@declaracion.id)
                      = label_tag 'Que contienen normas generales y permanentes', 'Que contienen normas generales y permanentes'
                      &nbsp
                      = check_box_tag 'clasificaciones[Que NO contienen normas generales y permanentes]', nil ,search_value_classify('Que NO contienen normas generales y permanentes',@declaracion.id)
                      = label_tag 'Que NO contienen normas generales y permanentes', 'Que NO contienen normas generales y permanentes'
                  .input-group
                    = f.label "Motivos", {class: "input-group-addon", id: "basic-addon16"}
                    .input-group.form-control
                      = check_box_tag 'clasificaciones[Motivos subsisten]', nil ,search_value_classify('Motivos subsisten',@declaracion.id)
                      = label_tag 'Motivos subsisten', 'Motivos subsisten'
                    .input-group
                      = f.label "No subsisten", {class: "input-group-addon", id: "basic-addon17"}
                      .input-group.form-control
                        = check_box_tag 'clasificaciones[Normas generales]', nil ,search_value_classify('Normas generales',@declaracion.id)
                        = label_tag 'Normas generales', 'Normas generales'
                        &nbsp
                        = check_box_tag 'clasificaciones[Normas no generales]', nil ,search_value_classify('Normas no generales',@declaracion.id)
                        = label_tag 'Normas no generales', 'Normas no generales'
                  .input-group.form-control
                    = check_box_tag 'clasificaciones[Plazo determinado y cumplido]', nil ,search_value_classify('Plazo determinado y cumplido',@declaracion.id)
                    = label_tag 'Plazo determinado y cumplido', 'Plazo determinado y cumplido'
                    &nbsp
                    = check_box_tag 'clasificaciones[Plazo determinado y NO cumplido]', nil ,search_value_classify('Plazo determinado y NO cumplido',@declaracion.id)
                    = label_tag 'Plazo determinado y NO cumplido', 'Plazo determinado y NO cumplido'
                  .input-group.form-control
                    = check_box_tag 'clasificaciones[Vigencia sujeta a condición resolutoria]', nil ,search_value_classify('Vigencia sujeta a condición resolutoria',@declaracion.id)
                    = label_tag 'Vigencia sujeta a condición resolutoria', 'Vigencia sujeta a condición resolutoria'
                  .input-group.form-control
                    = check_box_tag 'clasificaciones[Cumplida]', nil ,search_value_classify('Cumplida',@declaracion.id)
                    = label_tag 'Cumplida', 'Cumplida'
                    &nbsp
                    = check_box_tag 'clasificaciones[NO cumplida]', nil ,search_value_classify('NO cumplida',@declaracion.id)
                    = label_tag 'NO cumplida', 'NO cumplida'
                    &nbsp
                    = check_box_tag 'clasificaciones[Objeto agotado]', nil ,search_value_classify('Objeto agotado',@declaracion.id)
                    = label_tag 'Objeto agotado', 'Objeto agotado'
                .input-group
                  = f.label "Derogación", { class: "input-group-addon", id: "basic-addon16"}
                  .input-group.form-control
                    = check_box_tag 'clasificaciones[Derogación sujeta a condición suspensiva]', nil ,search_value_classify('Derogación sujeta a condición suspensiva',@declaracion.id)
                    = label_tag 'Derogación sujeta a condición suspensiva', 'Derogación sujeta a condición suspensiva'
                    &nbsp
                  .input-group.form-control
                    = check_box_tag 'clasificaciones[Derog. tácita]', nil ,search_value_classify('Derog. tácita',@declaracion.id)
                    = label_tag 'Derog. tácita', 'Derog. tácita'
                    &nbsp
                    = check_box_tag 'clasificaciones[Derog. cumplida]', nil ,search_value_classify('Derog. cumplida',@declaracion.id)
                    = label_tag 'Derog. cumplida', 'Derog. cumplida'
                    &nbsp
                    = check_box_tag 'clasificaciones[Derog. NO cumplida]', nil ,search_value_classify('Derog. NO cumplida',@declaracion.id)
                    = label_tag 'Derog. NO cumplida', 'Derog. NO cumplida'
                    &nbsp
                .group-buttons2
                  %button#ready.btn.btn-success{:type => "button"}= t('.btn_clasification.ready')
              #second-column
                .input-group
                  = f.label t('.observations'), { class: "input-group-addon", id: "basic-addon7"}
                  = f.text_area :observaciones, {class: "form-control", "aria-describedby" => "basic-addon7", :placeholder => t('.observations'), type: :text }
                .input-group
                  = f.label :expedientes, { class: "input-group-addon", id: "basic-addon8" }
                  = f.text_field :expedientes, { class: "form-control", "aria-describedby": "basic-addon8", id: "exped_token",
                                                 type: "text", data: { load: prepopulate_exps(@declaracion) }}
                .input-group
                  = label_tag nil, t('.norma_disp'), { class: "input-group-addon", id: "basic-addon9"}
                  #refer_type= select_tag nil, options_for_select(refers_type), { class: "form-control", "aria-describedby": "basic-addon9"}
                  .input-group
                    = f.label t('.destiny'), { class: "input-group-addon", id: "basic-addon13"}
                    %input#norma.form-control{"aria-describedby" => "basic-addon13", type: :text }
                  .input-group
                    = label_tag nil, t('.from'), { class: "input-group-addon", id: "basic-addon12"}
                    %input#from_refer.form-control{"aria-describedby" => "basic-addon12", type: :date }
                    .input-group-addon
                      %label
                        %input{:checked => "checked",:name => "tipo_dia", :type => "radio", :value => "0"}
                        = t('.not_clear')
                        &nbsp
                      %label
                        %input{:name => "tipo_dia", :type => "radio", :value => "1"}
                        = t('.working_day')
                        &nbsp
                      %label
                        %input{:name => "tipo_dia", :type => "radio", :value => "2"}
                        = t('.calendar_day')
                        &nbsp
                  .input-group
                    = label_tag nil, t('.to'), { class: "input-group-addon",id: "basic-addon11"}
                    %input#to_refer.form-control{"aria-describedby" => "basic-addon11", type: :date }
                    %input#day_refer.form-control{"aria-describedby" => "basic-addon11",:placeholder => t('.deadline_day'), type: :number }
                    %input#month_refer.form-control{"aria-describedby" => "basic-addon11",:placeholder => t('.deadline_month'), type: :number }
                    %input#year_refer.form-control{"aria-describedby" => "basic-addon11",:placeholder => t('.deadline_year'), type: :number }
                  .input-group-addon.parent-group-btn.btn
                    %i.fa.fa-plus-circle.fa-2x#add_disp
                #disp_norma_table
                  .row
                    .col-xs-12
                      %table.table.table-striped.table-bordered#table-link
                        %thead
                          %tr
                            %th= t('.table.ref_type')
                            %th= t('.table.destiny')
                            %th= t('.table.date')
                            %th{width: "1%"}= icon 'trash', '', class: 'fa-1x'
                        %tbody
                          - @declaracion.relationship_modificadas.each do |x|
                            %tr.linked-normas-table{"data-id" => x.modifica_id, "data-desde" => x.desde, "data-hasta" => x.hasta, "data-hasta-dia" => x.dia, "data-hasta-mes" => x.mes, "data-hasta-anio" => x.anio, "data-tipo-relacion" => x.tipo_relacion, "data-dia-tipo" => x.dia_habil}
                              %td= refers_by_type x
                              %td= indice x
                              %td= show_dates x
                              %td= icon 'fa fa-times', nil, class: 'btn btn-xs remove-tr'
        .modal-footer
          = f.submit "Guardar", {class: "btn btn-primary modal-submit"}

:javascript
  wi = $(window).width()-20;
  margin = 10;
  $(".modal-xs").css('width', wi);
  $(".modal-xs").css('margin-left', margin);

  $('#exped_token').tokenInput('/declaracions/search_exp', {
    preventDuplicates: true,
    propertyToSearch: 'indice',
    theme: 'bootstrap',
    zindex: 1050,
    hintText: "#{t 'tokeninput.hint.enter_exp'}",
    resultsFormatter: function(exp) {
      return '<li><p style= \'color: black\'> Exp: ' + exp.indice + '</p></li>';
    },
    tokenFormatter: function(exp) {
      return "<li><p class='exps-token' data-id='" + exp.id + "'>" + " Exp: " + exp.indice + "</p></li>";
    },
    allowTabOut: true,
    placeholder: "#{ I18n.t('tokeninput.placeholder.exp_example') }"
  });

  $('#tags-tokeninput').tokenInput('/declaracions/search_tag', {
    preventDuplicates: true,
    propertyToSearch: 'nombre',
    theme: 'bootstrap',
    zindex: 1050,
    hintText: "#{ I18n.t('tokeninput.placeholder.tag_example') }",
    tokenFormatter: function(tag) {
      return "<li><p class='tags-token' data-id='" + tag.id + "' style='color: black'> " + tag.nombre + "</p></li>";
    },
    resultsFormatter: function(tag) {
      return '<li><p>' + tag.nombre + '</p></li>';
    },
    allowTabOut: true,
    placeholder: "#{ I18n.t('tokeninput.placeholder.tag') }"
  });

  $('#norma').tokenInput('/declaracions/search_norma', {
    preventDuplicates: true,
    propertyToSearch: 'indice',
    theme: 'bootstrap',
    zindex: 1050,
    hintText: "#{ I18n.t('tokeninput.hint.enter_norma') }",
    resultsFormatter: function(norma) {
      return '<li><p style= \'color: black\'> ' + norma.indice + '</p></li>';
    },
    tokenFormatter: function(norma) {
      return '<li><p> ' + norma.indice + '</p></li>';
    },
    allowTabOut: true,
    placeholder: "#{ I18n.t('tokeninput.placeholder.norma_example') }",
    onAdd: function(norma){
      vinculada = false
      $('#table-link > tbody  > tr').each(function() {
        n = norma.indice.trim();
        td = $(this).children(':nth-child(2)').text().trim();
        vinculada = (td == n);
        if (vinculada){
          $('#norma').tokenInput('remove', norma);
          alert(n + " ya esta vinculada/o");
        }
      });
    }
  });

  $(document).on('click', '.modal-submit', function(event) {
    event.preventDefault();
    //add tags ids to form
    var tagsIds = [];
    $(".tags-token").each(function(key, value) {
      tagsIds.push($(value).data("id"))
    })
    var linkedNormasIds = {};
    var index = 0;
    $(".linked-normas-table").each(function(key, value) {
      linkedNormasIds[index] = {
        id: $(value).data("id"),
        //relation: $(value).data("id"),
        from: $(value).data("desde"),
        to: $(value).data("hasta"),
        to_day: $(value).data("hasta-dia"),
        to_month: $(value).data("hasta-mes"),
        to_year: $(value).data("hasta-anio"),
        type_day: $(value).data("dia-tipo"),
        relation_type: $(value).data("tipo-relacion")
      };
      index++;
    })
    var expsIds = []
    $(".exps-token").each(function(key, value) {
      expsIds.push($(value).data("id"))
    })
    //add exp ids to form
    $("#tags_ids").val(tagsIds);
    $("#exps_ids").val(expsIds);
    $("#linked_normas").val(JSON.stringify(linkedNormasIds));
    $("#new_declaracion, [id^='edit_declaracion']").submit();
    $("[id^='edit_declaracion']")
  });
