"<% url_helpers = Rails.application.routes.url_helpers %>"

// Modal initiators
class ModalInitiator {
  constructor(table) {
    this.table = table;
    this.el = '.initiators-modal';
    this.hideContent();
    this.filterCheckBoxes();
    this.listenRadios();
    this.listenForm();
    // this.listenInitiatorSubmit();
  }

  filterCheckBoxes() {
    let type = $('#procedure_type').val();
    if (type.length != 0) {
      switch(type) {
        case 'Condonacion': // Hide DEM, Bloque, Comision, Concejal
          $('#type_dem, #type_partisan_block, #type_commission, #type_commission')
            .each(function() { $(this).parent('label').hide(); });
          break;
        case 'Peticion': // Hide all except physical and legal particulars
          $(`#type_dem, #type_legislative_secretary, #type_partisan_block, #type_commission,
            #type_councilor, #type_official_distribution, #type_municipal_office`)
            .each(function() { $(this).parent('label').hide() });
          break;
        case 'ComunicacionOficial': // Hide only physical and legal particulars.
          $('#type_particular_pyshic, #type_particular_legal').each(function() {
            $(this).parent('label').hide();
          });
          break;
      }
    }
  }
  // listenInitiatorSubmit() {
  //   let that = this;
  //   let events = {
  //     'ajax:success': function (ev, response) {
  //       $(`${that.el} .modal`).modal('hide');
  //       table.insert(response)
  //     },
  //     'ajax:error': function (ev) {
  //       alert('Ha ocurrido un error en el servidor!');
  //     }
  //   }
  //   $(`${this.el} form`).on(events);
  // }

  // Listen when form fields changes
  listenForm() {
    let that = this;
    $('.forms select').on('change', function(ev) {
      if ($(this).val() != '')
        $(that.el).find('.modal-footer').show('slow');
      else
        $(that.el).find('.modal-footer').hide('slow');
    });
    // IMPROVE THIS!
    // TO PREVENT SOME ERRORS
    // $('.forms select').on('select2:unselecting', function(ev) {
    //   $(that.el).find('.modal-footer').hide('slow');
    //   console.log('select2', that.currentSelect2);
    //   $(this).select2("val", "");
    //   ev.preventDefault();
    // });
    let selectors = ['.official_distribution', '.municipal_office',
      '.particular_pyshic', '.particular_legal'];

    selectors.forEach(function(element, index) {
      $(element).on('click', '.btn-info', function() {
        $(`${element}_new`).show('fast');
        $(this).hide();
        $(`${element} .btn-danger`).show('fast');
        $(that.currentSelect2).select2('enable', false);
      });

      $(`${element}`).on('click', '.btn-danger', function() {
        $(`${element}_new`).hide('fast');
        $(that.currentSelect2).select2('enable', '');
        $(`${element} .btn-danger`).hide();
        $(`${element} .btn-info`).show('fast');
      });

      // Submit...
      $(`${element}_new`).on('click', '.btn-success', function() {
        $(`${element}_new`).hide('fast');
        $(that.currentSelect2).select2('enable', '');
        $(`${element} .btn-danger`).hide();
        $(`${element} .btn-info`).show('fast');
        $(`${element}_new input`).serialize();

        let dataRequest = {};
        $.each($(`#new_initiator_form ${element}_new input`).serializeArray(), function() {
          dataRequest[this.name] = this.value;
        });
        dataRequest.initiator_form = { type: element.slice(1) };

        $.ajax({
          url: "<%= url_helpers.initiators_path %>",
          data: dataRequest,
          method: 'POST',
          success: (response) => {
            $(that.currentSelect2).select2('trigger', 'select', { data: response });
          }
        });
      });
    });
  }

  // Listen when radio buttons will be click!
  listenRadios() {
    let that = this;
    $('.radio-group').on('change', '.radio input', function(ev) {
      let value = $('.radio-group input[type="radio"]:checked').val();
      that.showForms(this);
      that.hideRadios();
      that.toggleLeftBtn();
      $(`.${value} .btn-danger`).hide();
    });
    // Listen back button
    $('.radio-group').on('click', '.back-button button', function() {
      let value = $('.radio-group input[type="radio"]:checked').val();
      that.showRadios();
      that.hideContent('slow');
      that.filterCheckBoxes();
      that.clearSelect2();
      $('.radio-group input[type="radio"]:checked').prop('checked', false);
    });
  }

  showForms(radio) {
    let select_val = $(radio).val();
    switch (select_val) {
      case 'dem':
        this.toggleFooter();
        break;
      case 'legislative_secretary':
        this.toggleFooter();
        break;
      default:
        this.showByValue(select_val);
    }
  }

  showByValue(value) {
    $(`.forms .${value}`).show('fast', () => {
      let selector = `select#initiator_form_${value}_id, select#${value}_id`
      this.startSelect2(selector, value);
    });
  }

  startSelect2(select, value) {
    let selects = ['official_distribution', 'municipal_office',
      'particular_pyshic', 'particular_legal'];
    let text = $(select).data('text');

    let options = {
      allowClear: true,
      placeholder: text,
      language: 'es'
    };

    this.clearSelect2();

    if (selects.includes(value)) {
      options.ajax = {
        url: "<%= url_helpers.initiators_path %>" + `?value=${value}`,
        dataType: 'json',
        delay: 250,
        cache: true,
        data: (params) => {
          return {
            select_q: params.term || '%%'
          };
        },
        processResults: (data, params) => {
          return { results: data }
        }
      }
    } else {
      options
    }
    this.currentSelect2 = select;
    $(select).select2(options);
  }

  clearSelect2() {
    if (this.currentSelect2) {
      $(this.currentSelect2).select2('destroy');
      this.currentSelect2 = undefined;
    }
  }

  hideContent(param) {
    $(this.el).find('.modal-footer').hide(param);
    $('.radio-group .back-button').hide(param);
    $('.commission, .partisan_block, .councilor, .municipal_office').hide(param);
    $('.official_distribution, .particular_pyshic, .particular_legal').hide(param);
    $('.official_distribution_new, .municipal_office_new').hide(param);
    $('.particular_pyshic_new, .particular_legal_new').hide(param);
  }

  // Hide modal footer
  toggleFooter() {
    $(this.el).find('.modal-footer').toggle('slow');
  }

  // Hide back initiators button
  toggleLeftBtn() {
    $('.radio-group .back-button').toggle('slow');
  }

  showRadios() {
    $('input[type="radio"]').closest('label').show('slow');
  }

  hideRadios() {
    $('input[type="radio"]:not(:checked)').closest('label').hide('slow');
  }
}

// Procedures index, new and edit.
class Procedures {
  static indexDataTable() {
    $('#procedures-table').dataTable({
      processing: true,
      serverSide: true,
      // columns: [
      //   { name: 'attendance_type', orderable: true, searchable: false }
      //   { name: 'title', orderable: true, searchable: false }
      //   { name: 'abbreviation', orderable: true, searchable: false }
      //   { name: 'status', orderable: true, searchable: false }
      //   { name: 'default', orderable: true, searchable: false }
      // ]
      ajax: {
        url: $('#procedures-table').data('url'),
        method: 'GET',
        dataType: 'json'
        // Needed for the filters
        // data: function(params) {
        //   params.status_filter = $('select.status-filter').val()
        //   return params
      }
    })
  }

  static initiatorsSelect2() {
    let options = {
      multiple: true,
      placeholder: 'Busque personas y/o instituciones',
      theme: 'bootstrap',
      language: 'es',
      ajax: {
        url: "<%= url_helpers.initiators_path(format: :json) %>",
        dataType: 'json',
        delay: 250,
        cache: true,
        data: (params) => {
          return {
            select_q: params.term || '%%'
          };
        },
        processResults: (data, params) => {
          return { results: data }
        }
      }
    }
    $('#procedure_person_ids').select2(options)

    options.ajax.url = "<%= url_helpers.legislative_files_path  %>"
    options.placeholder = 'Busque expedientes ...'
    $('#procedure_legislative_file_ids').select2(options)

    options.ajax.url = "<%= url_helpers.initiators_path(value: :councilors, format: :json) %>"
    options.placeholder = 'Busque concejales por nombre y/o apellido ...'
    options.ajax.data = (params) => {
      let commission_ids = [];
      $('#comision_ids').select2('data').forEach(function(elem) { commission_ids.push(elem.id) });
      return {
        select_q: params.term || '%%',
        commissions: commission_ids
      };
    };
    $('#councilor_ids').select2(options)

    options.ajax.url = "<%= url_helpers.initiators_path(value: :commissions, format: :json) %>"
    options.placeholder = 'Busque por nombre de comisión ...'
    $('#comision_ids').select2(options)

    $('.finished').on('click', () => {
      if ($('.finished').attr('checked')) {
        $('.finished').attr('checked', false);
        $('.finished-field').css('display', 'none');
      }
      else {
        $('.finished').attr('checked', true);
        $('.finished-field').css('display', 'block');
      }
    });
  }

  static updateProcedureType() {
    $('.dispatch-procedure').hide()
    $(document).on('change', '#procedure_type', () => {
      if ($('#procedure_type').val() == 'Despacho') {
        $('.dispatch-procedure').show(1000)
        $('.common-procedure').hide(1000)
        setTimeout(function() {
          swal('Por favor, recuerde corroborar la cantidad de firmas del despacho', '', 'warning');
        }, 1000);
      }
      else {
        $('.dispatch-procedure').hide(1000)
        $('.common-procedure').show(1000)
      }
    })
  }
}

class ProcedureForm {
  constructor() {
    this.requestInProcess = false;
  }

  initiatorsModal(table) {
    $('#procedure-new').on('click', '.initiator-btn', (ev) => {
      if (!this.requestInProcess) {
        this.requestInProcess = true;
        $.get(
          $(ev.currentTarget).data('url'),
          (response) => {
            $('.initiators-modal').html(response);
            $('.initiators-modal .modal').modal('show');
            new ModalInitiator(table);
          }
        ).always(() => { this.requestInProcess = false });
      }
    });
  }
}

class InitiatorsTable {
  constructor() {
    this.el = '.initiators-table';
    this.initiators = [];
    this.listenModalSubmit();
    this.listenDeleteBtn();
  }

  listenDeleteBtn() {
    $(this.el).on('click', '.btn-remove', function(ev) {
      $(this).closest('tr').remove();
    })
  }

  _tr(data) {
    return `<tr class='success'>
      <td>${data.text}</td>
      <td> <div class="btn btn-xs btn-danger btn-remove">
        <i class="fa fa-lg fa-times"></i>
      </div></td>
    </tr>`
  }

  insert(someData) {
    // Insert info in the initiators table
    let $new = $(this._tr(someData)).hide();
    $(this.el + ' tbody').append($new);
    $new.show('slow');
    setTimeout(() => { $new.removeClass("success") }, 4000);

    // Insert data in the form
    let $hidden = $(`<input name="procedure[initiator_attributes][]"
      type="hidden" value=${JSON.stringify(someData)}>`);
    $('.procedure-form').append($hidden);
  }

  listenModalSubmit() {
    let that = this;
    $('.initiators-modal').on('submit', 'form', function(ev) {
      ev.preventDefault();
      let value = $('.radio-group input[type="radio"]:checked').val();
      let data = {};
      switch (value) {
        case 'dem':
          data = { id: "1", text: "DEM", type: "government" };
          break;
        case 'legislative_secretary':
          data = { id: "1", text: "Secretaria legislativa", type: "lalal" }
          break;
        default:
          let selectedInfo = $(`#initiator_form_${value}_id`).select2('data')[0];
          data = { id: selectedInfo.id, text: selectedInfo.text, type: value };
          break;
      }
      that.insert(data);
      $('.initiators-modal .modal').modal('hide');
    });
  }
}

class ProcedureIndex {
  constructor() {
    this.derivationBtn = '.listen-derivations';
    this.returnTableBtn = '.listen-return-back';
    this.mainBtns = '#procedures .main-buttons-header';
    this.alternativeHeader = '#procedures .alternative-button-header';
    this.showingDerivations = false;
    this.listenerDerivation();

  }

  settingDatatable() {
  $('#procedures-table').DataTable({
    fnDrawCallback: () => {
      console.log('esto funca???');
      this.updateView();
    }
  })
  }

  updateView() {
    if (this.showingDerivations) {
      $('#procedures-table .btn-check').show();
      $('#procedures-table .btn-eye').hide();
      $(this.mainBtns).hide();
      $(this.alternativeHeader).show();
    } else {
      $('#procedures-table .btn-eye').show();
      $('#procedures-table .btn-check').hide();
      $(this.mainBtns).show();
      $(this.alternativeHeader).hide();
    }
  }

  listenerDerivation() {
    var that = this;
    $(`${this.derivationBtn}, ${this.returnTableBtn}`).on('click', function() {
      that.showingDerivations = !that.showingDerivations;
      that.updateView();
    });
  }
}

$(document).on('ready', function() {
  if ($('#procedure-new').length) {
    let form = new ProcedureForm();
    form.initiatorsModal(new InitiatorsTable());
    $('#procedure_contingency_plan_attributes_date_at').datetimepicker({
      locale: 'es',
      format:'DD/MM/YYYY HH:mm'
    });
    Procedures.initiatorsSelect2();
    Procedures.updateProcedureType();
    $('.derivation').select2();

    $('.add_fields').on('click', function() {
      $('.derivation:last').select2();
    });

    $('#new_procedure').fileupload();
  };

  if ($('#procedures-table').length) {
    let table = new ProcedureIndex();
  }
})
